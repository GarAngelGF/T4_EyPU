// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using T3_P_ORM_SQL.Modelos;

#nullable disable

namespace T3_P_ORM_SQL.Migrations
{
    [DbContext(typeof(Contextobd))]
    partial class ContextobdModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ApellidoP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroLicencia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doctores");
                });

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Inter_Doc_Cita", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CitaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DoctorId", "CitaId");

                    b.HasIndex("CitaId");

                    b.ToTable("DoctorCitas");
                });

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Inter_Paciente_Cita", b =>
                {
                    b.Property<int>("PacienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CitaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PacienteId", "CitaId");

                    b.HasIndex("CitaId");

                    b.ToTable("PacienteCitas");
                });

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ApellidoP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Edad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Inter_Doc_Cita", b =>
                {
                    b.HasOne("T3_P_ORM_SQL.Modelos.Cita", "Cita")
                        .WithMany("DoctorCitas")
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("T3_P_ORM_SQL.Modelos.Doctor", "Doctor")
                        .WithMany("DoctorCitas")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Inter_Paciente_Cita", b =>
                {
                    b.HasOne("T3_P_ORM_SQL.Modelos.Cita", "Cita")
                        .WithMany("PacienteCitas")
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("T3_P_ORM_SQL.Modelos.Paciente", "Paciente")
                        .WithMany("PacienteCitas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Cita", b =>
                {
                    b.Navigation("DoctorCitas");

                    b.Navigation("PacienteCitas");
                });

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Doctor", b =>
                {
                    b.Navigation("DoctorCitas");
                });

            modelBuilder.Entity("T3_P_ORM_SQL.Modelos.Paciente", b =>
                {
                    b.Navigation("PacienteCitas");
                });
#pragma warning restore 612, 618
        }
    }
}
